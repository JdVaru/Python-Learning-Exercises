# Exercise 10 Password generation
# Write a password generator in Python.
# Be creative with how you generate passwords - strong passwords have a mix of lowercase letters, uppercase letters, numbers, and symbols.
# The passwords should be random, generating a new password every time the user asks for a new password.

import random
print('''Less than 5 byte password is too week
5 byte password is modrate
Greater than 5 byte password id strong (Recommonded)
''')
pass_len=int(input('Please enter password length (1-9): '))
val='abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?'

print('Your password is: ', ''.join(random.sample(val,pass_len)))

# Another way:
import string
import random
pass_len=int(input('Please enter password length (1-9): '))
val=string.ascii_letters + string.digits + string.punctuation

print(''.join(random.choice(val) for _ in range(pass_len)))

#Password generation function
def password(strength,length):
    pas = []
    if strength == 'min':
        char=string.ascii_lowercase + '0123456789'
    elif strength == 'mid':
        char=string.ascii_letters + '0123456789'
    elif strength == 'max':
        char=string.ascii_letters + string.digits + string.punctuation
    for _ in range(length):
        pas.append(random.choice(char))
    return ''.join(pas)
    
password('min',6)
>> 'akf7mk'

password('max',6)
>> '*H~%8H'

password('mid',6)
>> 'fjZWY5'
